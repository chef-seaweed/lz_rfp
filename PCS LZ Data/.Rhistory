setwd("~/Documents/PCS/data/pancakemayor")
library(pipeR)
library(dplyr)
library(data.table)
## May
may <- fread("pancakemayor_may_mau.csv", skip = 3)
may <- may %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(may) <- c('address','dt')
may$address <- substring(may$address, 2)
may <- apr %>>% filter(nchar(address) == 42) %>>% distinct()
setwd("~/Documents/PCS/data/pancakemayor")
library(pipeR)
library(dplyr)
library(data.table)
## May
may <- fread("pancakemayor_may_mau.csv", skip = 3)
may <- may %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(may) <- c('address','dt')
may$address <- substring(may$address, 2)
may <- apr %>>% filter(nchar(address) == 42) %>>% distinct()
setwd("~/Documents/PCS/data/pancakemayor")
library(pipeR)
library(dplyr)
library(data.table)
## May
may <- fread("pancakemayor_may_mau.csv", skip = 3)
may <- may %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(may) <- c('address','dt')
may$address <- substring(may$address, 2)
may <- may %>>% filter(nchar(address) == 42) %>>% distinct()
may %>>% group_by(dt) %>>% summarise(n_distinct(address))
## Apr
apr <- fread("pancakemayor_apr_mau.csv", skip = 3)
apr <- apr %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(apr) <- c('address','dt')
apr$address <- substring(apr$address, 2)
apr <- apr %>>% filter(nchar(address) == 42) %>>% distinct()
apr %>>% group_by(dt) %>>% summarise(n_distinct(address))
setwd("~/Documents/PCS/data/pancakemayor")
library(pipeR)
library(dplyr)
library(data.table)
## May
may <- fread("pancakemayor_may_mau.csv", skip = 3)
may <- may %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(may) <- c('address','dt')
may$address <- substring(may$address, 2)
may <- may %>>% filter(nchar(address) == 42) %>>% distinct()
may %>>% group_by(dt) %>>% summarise(n_distinct(address))
## Apr
apr <- fread("pancakemayor_apr_mau.csv", skip = 3)
## Apr
apr <- fread("pancakemayor_apr_mau.csv", skip = 3)
apr <- apr %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(apr) <- c('address','dt')
apr$address <- substring(apr$address, 2)
apr <- apr %>>% filter(nchar(address) == 42) %>>% distinct()
apr %>>% group_by(dt) %>>% summarise(n_distinct(address))
## Mar
mar <- fread("pancakemayor_mar_mau.csv", skip = 3)
mar <- mar %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(mar) <- c('address','dt')
mar$address <- substring(mar$address, 2)
mar <- mar %>>% filter(nchar(address) == 42) %>>% distinct()
#write.csv(mar, "pm_202403.csv", row.names = FALSE)
## Feb
feb <- fread("pancakemayor_feb_mau.csv", skip = 3)
feb <- feb %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(feb) <- c('address','dt')
feb$address <- substring(feb$address, 2)
feb <- feb %>>% filter(nchar(address) == 42) %>>% distinct()
#write.csv(feb, "pm_202402.csv", row.names = FALSE)
## Jan
jan <- fread("pancakemayor_jan_mau.csv", skip = 3)
jan <- jan %>>% as.data.frame() %>>% select(uid,`_time`)
colnames(jan) <- c('address','dt')
jan$address <- substring(jan$address, 2)
jan <- jan %>>% filter(nchar(address) == 42) %>>% distinct()
#write.csv(jan, "pm_202401.csv", row.names = FALSE)
cdf <- bind_rows(jan,feb,mar,apr,may) %>>% distinct()
write.csv(cdf, "pm_merge_2024.csv", row.names = FALSE)
library(pipeR)
library(dplyr)
library(magrittr)
library(lubridate)
setwd("~/Documents/PCS/data")
# get data from sensors first
miniprogram<-read.csv("web3wallet.csv")
colnames(miniprogram) <- c("date","pv","uv")
miniprogram <- head(miniprogram,-1)
miniprogram$date <- miniprogram$date %>>% as.Date()
miniprogram2 <-
miniprogram %>%
group_by(week = cut(date - 4, "week")) %>%
summarise(PV = sum(pv), UV = sum(uv)) %>>%
mutate(week = as.Date(week) + 4)
write.csv(miniprogram2, "web3wallet_new.csv", row.names = FALSE)
## install.packages("zoo")
## install.packages("readxl")
## install.packages("dplyr")
## install.packages("magrittr")
library(dplyr)
library(magrittr)
library(readxl)
library(zoo)
setwd("~/Documents/PCS/data")
# Read the data from Apollox team
v1_data <- read_excel("perp_raw.xlsx", sheet = 1)
v2_data <- read_excel("perp_raw.xlsx", sheet = 12)
# Add rolling 4-week sum of the metrics for v1 sheet
v1_data$rollsum_fee <- rollsum(v1_data$`Fee (in USDT)`, 4, align = "left", fill = NA)
v1_data$rollsum_volume <- rollsum(v1_data$`Trading Volume (in USDT)`, 4, align = "left", fill = NA)
v1_data$rollsum_trader <- rollsum(v1_data$`Active Trader`, 4, align = "left", fill = NA)
# Add rolling 4-week sum of the metrics for v2 sheet
v2_data$rollsum_fee <- rollsum(v2_data$`Fee in USDT`, 4, align = "left", fill = NA)
v2_data$rollsum_volume <- rollsum(v2_data$`Trading Volume (in USD)`, 4, align = "left", fill = NA)
v2_data$rollsum_trader <- rollsum(v2_data$`Active Trader`, 4, align = "left", fill = NA)
# Add WoW % change for rolling 4-week sum
v1_data <-
v1_data %>%
mutate(rollsum_fee_wow = (rollsum_fee / lead(rollsum_fee))-1,
rollsum_volume_wow = (rollsum_volume / lead(rollsum_volume))-1,
rollsum_trader_wow = (rollsum_trader / lead(rollsum_trader))-1) %>%
rename("Rolling 4-week Sum of Trading Fee" = "rollsum_fee",
"Rolling 4-week Sum of Trading Volume" = "rollsum_volume",
"Rolling 4-week Sum of Active Trader" = "rollsum_trader")
v2_data <-
v2_data %>%
mutate(rollsum_fee_wow = (rollsum_fee / lead(rollsum_fee))-1,
rollsum_volume_wow = (rollsum_volume / lead(rollsum_volume))-1,
rollsum_trader_wow = (rollsum_trader / lead(rollsum_trader))-1) %>%
rename("Rolling 4-week Sum of Trading Fee" = "rollsum_fee",
"Rolling 4-week Sum of Trading Volume" = "rollsum_volume",
"Rolling 4-week Sum of Active Trader" = "rollsum_trader")
write.csv(v1_data, "perp_v1_new.csv", row.names = FALSE)
write.csv(v2_data, "perp_v2_new.csv", row.names = FALSE)
##### Aptos #####
aptos <- fread("aptos_trader_20240501.csv")
setwd("~/Documents/PCS/project/layerzero")
library(data.table)
library(pipeR)
library(dplyr)
##### EVM #####
a <- fread("[PCS LZ Data] A. veCAKE Holders.csv")
setwd("~/Documents/PCS/project/layerzero/lz_rfp/PCS LZ Data")
a <- fread("[PCS LZ Data] A. veCAKE Holders.csv")
head(a)
a %>% filter(!grepl("^0x",`locker/address`))
b <- fread("[PCS LZ Data] B. Active Traders.csv")
head(b)
a %>% filter(!grepl("^0x",address))
b %>% filter(!grepl("^0x",address))
b %>% filter(!grepl("^0x",address)) %>>% nrow()
b %>% filter(!grepl("^0x",address)) %>>% .$network
b %>% filter(!grepl("^0x",address)) %>>% distinct(network)
setwd("~/Documents/PCS/project/layerzero")
##### EVM #####
bnb_eth <- fread("evm_trader_bnb_eth_20240501.csv")
non_bnb_eth <- fread("evm_trader_non_bnb_eth_20240501.csv")
evm <- rbind(bnb_eth,non_bnb_eth)
result_dt <- evm[, .(volume = sum(volume), tx_cnt = sum(tx_cnt)), by = address][order(-volume, -tx_cnt)]
##### Aptos #####
aptos <- fread("aptos_trader_20240501.csv")
#### Conditions ####
evm_final <- subset(result_dt, tx_cnt >= 15 & volume >= 50) %>% .[, network := 'evm']
aptos_final <- subset(aptos, tx_cnt >= 15 & volume >= 50) %>% .[, network := 'aptos']
nrow(evm_final)
nrow(aptos_final)
pcs_final <- rbind(evm_final,aptos_final)
nrow(pcs_final)
nrow(b)
aptos %>% filter(!grepl("^0x",address)) %>>% distinct(network)
aptos %>% filter(!grepl("^0x",address))
head(aptos)
evm %>% filter(!grepl("^0x",address))
bnb_eth %>% filter(!grepl("^0x",address))
non_bnb_eth %>% filter(!grepl("^0x",address))
nrow(b)
pcs_final
pcs_final %>% filter(!grepl("^0x",address))
b %>% filter(!grepl("^0x",address))
b %>% filter(!grepl("^0x",address)) %>>% nrow()
pcs_final %>% filter(!grepl("^0x",address)) %>>% nrow()
a <- fread("[PCS LZ Data] A. veCAKE Holders.csv")
b <- fread("[PCS LZ Data] B. Active Traders.csv")
c <- fread("[PCS LZ Data] C. LPers.csv")
d <- fread("[PCS LZ Data] D. CAKE Bridgoors.csv")
e <- fread("[[PCS LZ Data] E. Cross-chain voters.csv")
f <- fread("[PCS LZ Data] F. Developer.csv")
a %>% filter(!grepl("^0x",`locker/address`)) %>>% nrow()
a <- fread("[PCS LZ Data] A. veCAKE Holders.csv")
b <- fread("[PCS LZ Data] B. Active Traders.csv")
setwd("~/Documents/PCS/project/layerzero/lz_rfp/PCS LZ Data")
a <- fread("[PCS LZ Data] A. veCAKE Holders.csv")
b <- fread("[PCS LZ Data] B. Active Traders.csv")
c <- fread("[PCS LZ Data] C. LPers.csv")
d <- fread("[PCS LZ Data] D. CAKE Bridgoors.csv")
e <- fread("[[PCS LZ Data] E. Cross-chain voters.csv")
f <- fread("[PCS LZ Data] F. Developer.csv")
a %>% filter(!grepl("^0x",`locker/address`)) %>>% nrow()
b %>% filter(!grepl("^0x",address)) %>>% nrow() %>>% nrow()
b
a %>% filter(!grepl("^0x",`locker/address`)) %>>% nrow()
b %>% filter(!grepl("^0x",address)) %>>% nrow()
c %>% filter(!grepl("^0x",address)) %>>% nrow()
d %>% filter(!grepl("^0x",address)) %>>% nrow()
e %>% filter(!grepl("^0x",address)) %>>% nrow()
head(e)
e
e <- fread("[[PCS LZ Data] E. Cross-chain voters.csv")
a <- fread("[PCS LZ Data] A. veCAKE Holders.csv")
b <- fread("[PCS LZ Data] B. Active Traders.csv")
c <- fread("[PCS LZ Data] C. LPers.csv")
d <- fread("[PCS LZ Data] D. CAKE Bridgoors.csv")
e <- fread("[PCS LZ Data] E. Cross-chain voters.csv")
f <- fread("[PCS LZ Data] F. Developer.csv")
a %>% filter(!grepl("^0x",`locker/address`)) %>>% nrow()
b %>% filter(!grepl("^0x",address)) %>>% nrow()
c %>% filter(!grepl("^0x",address)) %>>% nrow()
d %>% filter(!grepl("^0x",address)) %>>% nrow()
e %>% filter(!grepl("^0x",address)) %>>% nrow()
head(f)
head(e)
a %>% filter(!grepl("^0x",`locker/address`)) %>>% nrow()
b %>% filter(!grepl("^0x",address)) %>>% nrow()
c %>% filter(!grepl("^0x",address)) %>>% nrow()
d %>% filter(!grepl("^0x",address)) %>>% nrow()
e %>% filter(!grepl("^0x",user)) %>>% nrow()
f %>% filter(!grepl("^0x",user)) %>>% nrow()
pcs_final %>% filter(!grepl("^0x",address)) %>>% nrow()
final_dt
setwd("~/Documents/PCS/project/layerzero")
##### EVM #####
evm_most <- fread("evm_most_lper_20240501.csv")
zkevmv3 <- fread("zkevm_v3_lper_20240501.csv")
opbnb <- fread("opbnb_lper_20240501.csv")
evm <- do.call("rbind", list(evm_most, zkevmv3, opbnb)) %>% .[, network := 'evm']
##### Aptos #####
aptos <- fread("aptos_lper_20240501.csv")
aptos <- aptos  %>% .[, network := 'aptos']
#### combine and group by sum ####
evmapt <- rbind(evm,aptos)
summed_dt <- evmapt %>%
.[, .(amount_usd = sum(amount_usd)), by = .(address, network)]
final_dt <- summed_dt[amount_usd >= 100]
final_dt <- final_dt[order(-amount_usd)]
final_dt %>% filter(!grepl("^0x",address)) %>>% nrow()
nrow(pcs_final)
subset(pcs_final, tx_cnt <= 10000) %>>% nrow()
subset(pcs_final, tx_cnt < 10000) %>>% nrow()
nrow()
nrow(b)
nrow(pcs_final)
# final adjustment
subset(pcs_final, tx_cnt < 10000) %>>% nrow()
# final adjustment
subset(pcs_final, tx_cnt <= 10000) %>>% nrow()
# final adjustment
subset(pcs_final, tx_cnt <= 5000) %>>% nrow()
# final adjustment
pcs_final2 <- subset(pcs_final, tx_cnt <= 5000) %>>% nrow()
nrow(pcs_final2)
# final adjustment
pcs_final2 <- subset(pcs_final, tx_cnt <= 5000)
nrow(pcs_final2)
max(pcs_final2$tx_cnt)
head(b)
head(pcs_final2)
2^2
# final adjustment and add weightage
pcs_final2 <-
subset(pcs_final, tx_cnt <= 5000) %>>%
mutate(weightage = volume^(1/1.5))
head(pcs_final2)
# final adjustment and add weightage
pcs_final2 <-
subset(pcs_final, tx_cnt <= 5000) %>>%
mutate(weightage = volume^(1/1.5)) %>>%
select(address,network,weightage)
nrow(pcs_final2)
head(pcs_final2)
head(b)
# final adjustment and add weightage
pcs_final2 <-
subset(pcs_final, tx_cnt <= 5000) %>>%
mutate(weightage = volume^(1/1.5)) %>>%
mutate(weightage = weightage/sum(weightage)) %>>%
select(address,network,weightage)
head(b)
head(pcs_final2)
pcs_final2 <-
subset(pcs_final, tx_cnt <= 5000) %>>%
mutate(weightage = volume^(1/1.5))
sum(pcs_final2$weightage)
3059757.2/420461978
nrow(pcs_final2)
# final adjustment and add weightage
pcs_final2 <-
subset(pcs_final, tx_cnt <= 5000) %>>%
mutate(weightage = volume^(1/1.5)) %>>%
mutate(weightage = weightage/sum(weightage)) %>>%
select(address,network,weightage)
head(pcs_final2)
setwd("~/Documents/PCS/project/layerzero/lz_rfp/PCS LZ Data")
fwrite(pcs_final2, "B. Active Traders.csv")
b
head(b)
head(pcs_final2)
nrow(pcs_final2)
nrow(a)
pcs_final2 %>% filter(!grepl("^0x",`locker/address`)) %>>% nrow()
pcs_final2 %>% filter(!grepl("^0x",`addess`)) %>>% nrow()
pcs_final2 %>% filter(!grepl("^0x",`address`)) %>>% nrow()
######## veCAKE ########
setwd("~/Documents/PCS/project/layerzero")
vecake <- fread("lz_vecake.csv")
nrow(vecake)
head(vecake)
a
vecake_w <-
vecake %>>%
mutate(weightage = max_vecake_amount / sum(max_vecake_amount))
vecake_w
head(vecake_w)
head(a)
vecake_w <-
vecake %>>%
mutate(notes = ifelse(locker_name %in% c("CakePie", "StakeDAO"), "Changed to treasury address", NA)) %>%
mutate(locker = case_when(
locker_name == "CakePie" ~ "0x0b116c2963529b7f34dfa36642ba8f94cc8f5004",
locker_name == "StakeDAO" ~ "0xabd75fcec454573cdb89eb7904734b296657c61d",
TRUE ~ locker
))
head(vecake_w)
head(a)
vecake_w <-
vecake %>>%
mutate(notes = ifelse(locker_name %in% c("CakePie", "StakeDAO"), "Changed to treasury address", '')) %>%
mutate(locker = case_when(
locker_name == "CakePie" ~ "0x0b116c2963529b7f34dfa36642ba8f94cc8f5004",
locker_name == "StakeDAO" ~ "0xabd75fcec454573cdb89eb7904734b296657c61d",
TRUE ~ locker
)) %>>%
rename(`locker/address` = locker)
head(vecake_w)
head(final_dt)
nrow(final_dt)
final_dt %>% filter(!grepl("^0x",address)) %>>% nrow()
head(c)
c %>% filter(!grepl("^0x",address)) %>>% nrow()
c %>% filter(!grepl("^0x",address))
#### add weightage ####
final_dt %>%
mutate(weightage = amount_usd / sum(amount_usd))
head(vecake)
vecake_w <-
vecake %>%
mutate(weightage = sqrt(max_vecake_amount) / sum(sqrt(max_vecake_amount))) %>%
mutate(notes = ifelse(locker_name %in% c("CakePie", "StakeDAO"), "Changed to treasury address", '')) %>%
mutate(locker = case_when(
locker_name == "CakePie" ~ "0x0b116c2963529b7f34dfa36642ba8f94cc8f5004",
locker_name == "StakeDAO" ~ "0xabd75fcec454573cdb89eb7904734b296657c61d",
TRUE ~ locker
)) %>%
rename(`locker/address` = locker)
head(vecake_w)
head(a)
vecake_w <-
vecake %>%
mutate(weightage = sqrt(max_vecake_amount) / sum(sqrt(max_vecake_amount))) %>%
mutate(notes = ifelse(locker_name %in% c("CakePie", "StakeDAO"), "Changed to treasury address", '')) %>%
mutate(locker = case_when(
locker_name == "CakePie" ~ "0x0b116c2963529b7f34dfa36642ba8f94cc8f5004",
locker_name == "StakeDAO" ~ "0xabd75fcec454573cdb89eb7904734b296657c61d",
TRUE ~ locker
)) %>%
rename(`locker/address` = locker) %>%
select(-max_vecake_amount)
head(a)
head(vecake_w)
nrow(a)
nrow(vecake_w)
View(a)
setwd("~/Documents/PCS/project/layerzero/lz_rfp/PCS LZ Data")
fwrite(vecake_w, "A. veCAKE Holders.csv")
#### add weightage ####
Lp_w <-
final_dt %>%
mutate(weightage = sqrt(amount_usd) / sum(sqrt(amount_usd)))
head(Lp_w)
head(c)
nrow(c)
nrow(lp_w)
nrow(Lp_w)
#### add weightage ####
lp_w <-
final_dt %>%
mutate(weightage = sqrt(amount_usd) / sum(sqrt(amount_usd)))
#### add weightage ####
lp_w <-
final_dt %>%
mutate(weightage = sqrt(amount_usd) / sum(sqrt(amount_usd))) %>%
select(-amount_usd)
head(c)
head(lp)
head(c)
head(lp_w)
setwd("~/Documents/PCS/project/layerzero/lz_rfp/PCS LZ Data")
fwrite(lp_w, "C. LPers.csv")
head(d)
nrow(d)
bg_evm <- fread("cake_bridge_aptos.csv")
bg_apt <- fread("cake_bridge_evm.csv")
######## CAKE Bridging ########
setwd("~/Documents/PCS/project/layerzero")
bg_evm <- fread("cake_bridge_aptos.csv")
bg_apt <- fread("cake_bridge_evm.csv")
head(bg_apt)
subset(bg_evm, bridged_cake_txn >= 5) %>% .[, network := 'evm']
subset(bg_apt, bridged_cake_txn >= 5) %>% .[, network := 'aptos'] %>% nrow()
subset(bg_evm, bridged_cake_txn >= 5) %>% .[, network := 'evm'] %>% nrow()
subset(bg_apt, bridged_cake_txn >= 5) %>% .[, network := 'aptos'] %>% nrow()
6156+772
rbind(bg_evm,bg_apt)
bg_evm <- subset(bg_evm, bridged_cake_txn >= 5) %>% .[, network := 'evm']
bg_apt <- subset(bg_apt, bridged_cake_txn >= 5) %>% .[, network := 'aptos']
rbind(bg_evm,bg_apt)
head(d)
bg_w <-
rbind(bg_evm,bg_apt) %>%
mutate(weightage = sqrt(avg_bridged_cake_per_tx) / sum(sqrt(avg_bridged_cake_per_tx))) %>%
select(address,network,weightage)
head(bg_w)
bg_w <-
rbind(bg_evm,bg_apt) %>%
mutate(weightage = sqrt(avg_bridged_cake_per_tx) / sum(sqrt(avg_bridged_cake_per_tx))) %>%
select(address,network,weightage) %>%
arrange(desc(weightage))
head(bg_w)
head(bg_w)
head(d)
d <-
d %>% arrange(desc(weightage))
head(d)
head(bg_w)
bg_evm <- fread("cake_bridge_evm.csv")
bg_apt <- fread("cake_bridge_apt.csv")
bg_evm <- subset(bg_evm, bridged_cake_txn >= 5) %>% .[, network := 'evm']
bg_apt <- subset(bg_apt, bridged_cake_txn >= 5) %>% .[, network := 'aptos']
bg_w <-
rbind(bg_evm,bg_apt) %>%
mutate(weightage = sqrt(avg_bridged_cake_per_tx) / sum(sqrt(avg_bridged_cake_per_tx))) %>%
select(address,network,weightage) %>%
arrange(desc(weightage))
d <-
d %>% arrange(desc(weightage))
######## CAKE Bridging ########
setwd("~/Documents/PCS/project/layerzero")
bg_evm <- fread("cake_bridge_evm.csv")
bg_apt <- fread("cake_bridge_apt.csv")
bg_evm <- fread("cake_bridge_evm.csv")
bg_apt <- fread("cake_bridge_apt.csv")
bg_evm <- subset(bg_evm, bridged_cake_txn >= 5) %>% .[, network := 'evm']
bg_apt <- subset(bg_apt, bridged_cake_txn >= 5) %>% .[, network := 'aptos']
bg_w <-
rbind(bg_evm,bg_apt) %>%
mutate(weightage = sqrt(avg_bridged_cake_per_tx) / sum(sqrt(avg_bridged_cake_per_tx))) %>%
select(address,network,weightage) %>%
arrange(desc(weightage))
d <-
d %>% arrange(desc(weightage))
head(d)
head(bg_w)
setwd("~/Documents/PCS/project/layerzero/lz_rfp/PCS LZ Data")
fwrite(bg_w, "D. CAKE Bridgoors.csv")
setwd("~/Documents/PCS/project/layerzero/lz_rfp/PCS LZ Data")
a <- fread("[PCS LZ Data] A. veCAKE Holders.csv")
b <- fread("[PCS LZ Data] B. Active Traders.csv")
c <- fread("[PCS LZ Data] C. LPers.csv")
d <- fread("[PCS LZ Data] D. CAKE Bridgoors.csv")
e <- fread("[PCS LZ Data] E. Cross-chain voters.csv")
f <- fread("[PCS LZ Data] F. Developer.csv")
a %>% filter(!grepl("^0x",`locker/address`)) %>>% nrow()
b %>% filter(!grepl("^0x",address)) %>>% nrow()
c %>% filter(!grepl("^0x",address)) %>>% nrow()
d %>% filter(!grepl("^0x",address)) %>>% nrow()
e %>% filter(!grepl("^0x",user)) %>>% nrow()
f %>% filter(!grepl("^0x",user)) %>>% nrow()
a %>>% rename(address = `locker/address`)
e %>% rename(address = user) %>% select(address,weightage)
a <- a %>% rename(address = `locker/address`) %>% select(address,weightage)
b <- b %>% select(address,weightage)
c <- c %>% select(address,weightage)
d <- d %>% select(address,weightage)
e <- e %>% rename(address = user) %>% select(address,weightage)
f <- f %>% rename(address = user) %>% select(address,weightage)
lzpcs <- rbindlist(list(a,b,c,d,e,f))
nrow(lzpcs)
head(lzpcs)
lzpcs <-
rbindlist(list(a,b,c,d,e,f)) %>%
group_by(address) %>%
summarise(allocate = sum(weightage))
nrow(lzpcs)
View(a)
sum(a$weightage)
0.45*0.00000884
0.45*0.00000884*100
lzpcs <-
rbindlist(list(a,b,c,d,e,f))
nrow(lzpcs)
21.4*1000*0.02
